# lightning.pytorch==2.5.2
seed_everything: true
trainer:
  accelerator: auto
  strategy: auto
  devices: auto
  num_nodes: 1
  
  # Using 16-bit mixed precision
  precision: "16-mixed"

  callbacks:
    - class_path: lightning.pytorch.callbacks.LearningRateMonitor
      init_args:
        logging_interval: 'epoch'

    # Save best model based on SSIM
    - class_path: lightning.pytorch.callbacks.ModelCheckpoint
      init_args:
        monitor: "val_ssim"
        mode: "max"
        save_top_k: 1
        dirpath: "checkpoints/best/"
        filename: "best-hsdt-epoch{epoch:03d}-val_ssim{val_ssim:.4f}"
        save_last: false

    # Save best model based on PSNR
    - class_path: lightning.pytorch.callbacks.ModelCheckpoint
      init_args:
        monitor: "val_psnr"
        mode: "max"
        save_top_k: 1
        dirpath: "checkpoints/best/"
        filename: "best-hsdt-epoch{epoch:03d}-val_psnr{val_psnr:.2f}"
        save_last: false

    # Save every 5 epochs (regardless of score)
    - class_path: lightning.pytorch.callbacks.ModelCheckpoint
      init_args:
        every_n_epochs: 5
        save_top_k: -1
        dirpath: "checkpoints/interval/"
        filename: "hsdt-epoch{epoch:03d}"
        save_last: false
  fast_dev_run: false

  max_epochs: 200
  min_epochs: null
  max_steps: -1
  min_steps: null

  max_time: null
  limit_train_batches: null
  limit_val_batches: null
  limit_test_batches: null
  limit_predict_batches: null
  overfit_batches: 0.0
  val_check_interval: null
  check_val_every_n_epoch: 1
  num_sanity_val_steps: null

  # Log every 10 steps
  log_every_n_steps: 10

  enable_checkpointing: true
  enable_progress_bar: true
  enable_model_summary: true
  accumulate_grad_batches: 1
  logger:
    class_path: lightning.pytorch.loggers.TensorBoardLogger
    init_args:
      save_dir: logs/
      name: hsdt_lightning

  # Gradiant clipping to help stabilize training
  gradient_clip_val: 1.0
  gradient_clip_algorithm: "norm"

  deterministic: null
  benchmark: null
  inference_mode: true
  use_distributed_sampler: true

  # Profiler 
  profiler:
    class_path: lightning.pytorch.profilers.AdvancedProfiler
    init_args:
      dirpath: "logs"
      filename: "profiler.txt"

  detect_anomaly: false
  barebones: false
  plugins: null
  sync_batchnorm: false
  reload_dataloaders_every_n_epochs: 0
  default_root_dir: null
  model_registry: null
model:
  in_channels: 1
  channels: 6
  encoder_count: 5
  downsample_layers:
  - 1
  - 3
data:
  base_dir: "data"
  spatial_factor: 64
  out_bands: 81
  preprocess_data: false
  gaussian_noises:
  - 30
  # - 50
  # - 70
  patch_test: true
  batch_size: 32
optimizer:
  class_path: torch.optim.AdamW
  init_args:
    lr: 3e-4
    weight_decay: 1e-2
lr_scheduler:
  class_path: torch.optim.lr_scheduler.OneCycleLR
  init_args:
    max_lr: 3e-4
    total_steps: 10000   # or use trainer.max_steps if known
    pct_start: 0.1       # 10% warm-up
    anneal_strategy: "cos"
    cycle_momentum: False
ckpt_path: null
